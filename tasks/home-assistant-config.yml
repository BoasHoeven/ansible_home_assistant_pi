---
- name: Setup Home Assistant configuration
  block:
    - name: Wait for Home Assistant configuration file
      ansible.builtin.wait_for:
        path: "{{ config_dir }}/home-assistant/config/configuration.yaml"
        state: present
        timeout: 40
        msg: Timeout to find file '{{ config_dir }}/home-assistant/config/configuration.yaml'

    - name: Ensure backup and working copy of configuration.yaml exist
      ansible.builtin.copy:
        src: "{{ config_dir }}/home-assistant/config/configuration.yaml"
        dest: "{{ item }}"
        mode: 0755
      loop:
        - /tmp/configuration.tmp
      become: false

  become: false

- name: Manage Home Assistant configuration
  block:
    - name: Manage sidebars in Home Assistant configuration
      include_tasks: subtasks/sidebar_tasks.yml
      loop:
        - { name: "panel_iframe", key: "panel_iframe" }
        - { name: "zigbee2mqtt", key: "zigbee2mqtt", enabled: "{{ sidebar.zigbee2mqtt }}", title: "zigbee2mqtt", url: "http://{{ ansible_default_ipv4.address }}:8080", icon: "mdi:zigbee", require_admin: true }
        - { name: "portainer", key: "portainer", enabled: "{{ sidebar.portainer }}", title: "portainer", url: "http://{{ ansible_default_ipv4.address }}:9000", icon: "mdi:docker", require_admin: true }
        - { name: "pihole", key: "pihole", enabled: "{{ sidebar.pihole }}", title: "pihole", url: "http://{{ ansible_default_ipv4.address }}/admin/login.php", icon: "mdi:pi-hole", require_admin: true }
        - { name: "webrtc", key: "webrtc", enabled: "{{ sidebar.webrtc }}", title: "webrtc", url: "http://{{ ansible_default_ipv4.address }}:1984", icon: "mdi:camera", require_admin: true }
      loop_control:
        loop_var: var_sidebar

    - name: Manage custom sidebars in Home Assistant configuration
      include_tasks: subtasks/custom_sidebar_tasks.yml
      loop:
        - { name: "panel_integrations", enabled: "{{ sidebar.integrations }}", sidebar_title: "Integrations", sidebar_icon: "mdi:audio-input-rca", url_path: "config/integrations", module_url: "/api/hassio/app/entrypoint.js", embed_iframe: true, require_admin: true }
        - { name: "panel_automations", enabled: "{{ sidebar.automations }}", sidebar_title: "Automations", sidebar_icon: "mdi:cogs", url_path: "config/automation", module_url: "/api/hassio/app/entrypoint.js", embed_iframe: true, require_admin: true }
      loop_control:
        loop_var: custom_sidebar

    - name: Update Home Assistant configuration
      ansible.builtin.copy:
        src: /tmp/configuration.tmp
        dest: "{{ config_dir }}/home-assistant/config/configuration.yaml"
        mode: 0755
      become: false

    - name: Clone or update Home Assistant Blueprints repository
      git:
        repo: 'https://github.com/BoasHoeven/home_assistant_blueprints.git'
        dest: "{{ config_dir }}/home-assistant/config/blueprints/automation/boas"
        version: 'main'
        update: yes
      when: install_blueprints
      become: true

    - name: Manage Tesla Custom Component
      include_tasks: subtasks/custom_component_manager.yml
      vars:
        custom_component_name: tesla_custom
        custom_component_repo: https://github.com/alandtse/tesla.git
        custom_component_version: main 
      when: custom_components.tesla

    - name: Manage WebRTC Custom Component
      include_tasks: subtasks/custom_component_manager.yml
      vars:
        custom_component_name: webrtc
        custom_component_repo: https://github.com/AlexxIT/WebRTC.git
      when: custom_components.webrtc
  
  become: false

- name: Reload Home Assistant configuration
  block:
    - name: Stop home-assistant container (Reloading config)
      community.docker.docker_container:
        name: home-assistant
        state: stopped
      become: false

    - name: Start home-assistant container (Reloading config)
      community.docker.docker_container:
        name: home-assistant
        state: started
      become: false

  become: false

- name: Cleanup temporary files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /tmp/configuration.tmp
  become: false
